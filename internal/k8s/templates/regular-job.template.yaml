apiVersion: batch/v1
kind: Job
metadata:
  name: gameserver-regular-job-{{ .MatchId }}
  namespace: gameservers
  labels:
    app-type: gameserver
spec:
  ttlSecondsAfterFinished: 60
  backoffLimit: 0
  template:
    spec:
      restartPolicy: Never  # don't restart Pod
      nodeSelector:
        node-type: "gameserver"
        region: "{{ .Region }}"
      tolerations:
        - key: "dedicated"
          operator: "Equal"
          value: "gameserver"
          effect: "NoSchedule"
      containers:
        - name: sidecar
          resources:
            requests:
              cpu: "10m"
              memory: "30Mi"
          imagePullPolicy: Always
          image: dota2classic/srcds-sidecar:k8s-latest
          ports:
            - name: http-port
              containerPort: 7777
              protocol: TCP
          volumeMounts:
            - name: match-cfg
              mountPath: /root/cfg
            - name: logs
              mountPath: /root/dota/logs
            - name: replays
              mountPath: /root/dota/replays
            - name: dumps
              mountPath: /tmp/dumps
          env:
            - name: MATCH_ID
              value: "{{ .MatchId }}"
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: LOBBY_TYPE
              value: "{{ .LobbyType }}"
            - name: GAME_MODE
              value: "{{ .GameMode }}"
            - name: HOST_PORT
              value: "{{ .HostGamePort  }}"
            - name: HOST_TV_PORT
              value: "{{ .HostSourceTVPort  }}"

          envFrom:
            - secretRef:
                name: shared-gameserver-secrets # Global cluster secrets
            - secretRef:
                name: gameserver-secrets-{{ .MatchId }}  # Match specific secrets


        - name: gameserver
          resources:
            requests:
              cpu: "500m"
              memory: "500Mi"
          imagePullPolicy: Always
          image: dota2classic/srcds:d684_dev-k8s-latest
          ports:
            # 27015 TCP
            - name: tcp-27015
              containerPort: {{ .HostGamePort }}
              protocol: TCP
              hostPort: {{ .HostGamePort }}
            # 27015 UDP
            - name: udp-27015
              containerPort: {{ .HostGamePort }}
              protocol: UDP
              hostPort: {{ .HostGamePort }}
            # 27020 TCP
            - name: tcp-27020
              containerPort: {{ .HostSourceTVPort }}
              protocol: TCP
              hostPort: {{ .HostSourceTVPort }}
            # 27020 UDP
            - name: udp-27020
              containerPort: {{ .HostSourceTVPort }}
              protocol: UDP
              hostPort: {{ .HostSourceTVPort }}
          volumeMounts:
            - name: match-cfg
              mountPath: /root/dota/match_cfg
            - name: logs
              mountPath: /root/dota/logs
            - name: replays
              mountPath: /root/dota/replays
            - name: dumps
              mountPath: /tmp/dumps
          env:
            - name: MAP
              value: "{{ .Map }}"
            - name: GAMEMODE
              value: "{{ .GameMode }}"
            - name: MASTER_SERVER
              value: "http://localhost:7777" # Sidecar
            - name: LOGFILE_NAME
              value: "{{ .MatchId }}.log"
            - name: GAME_PORT
              value: "{{ .HostGamePort }}"
            - name: TV_PORT
              value: "{{ .HostSourceTVPort }}"
            - name: TICKRATE
              value: "{{ .TickRate }}"
            - name: ADDITIONAL_CFG
              value: "{{ .ConfigName }}"

            - name: NET_PUBLIC_ADDR
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: RCON_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gameserver-secrets-{{ .MatchId }}
                  key: RCON_PASSWORD

      volumes:
        - name: match-cfg
          configMap:
            name: gameserver-config-{{ .MatchId }}
        - name: logs
          emptyDir: {}
        - name: replays
          emptyDir: {}
        - name: dumps
          emptyDir: {}
